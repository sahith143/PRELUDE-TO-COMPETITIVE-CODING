** Creation of stack using linked list **
#include <iostream>
using namespace std;

// Define a node structure for linked list
struct Node {
    int data;
    Node* next;
};

// Define Stack class
class Stack {
private:
    Node* top; // top of the stack
public:
    Stack() {
        top = NULL; // initialize top to null
    }

    // Push a new element onto the top of the stack
    void push(int val) {
        Node* newNode = new Node;
        newNode->data = val;
        newNode->next = top;
        top = newNode;
    }

    // Pop the element at the top of the stack
    void pop() {
        if (top == NULL) {
            cout << "Stack is empty!" << endl;
            return;
        }
        Node* temp = top;
        top = top->next;
        delete temp;
    }

    // Check if the stack is empty
    bool isEmpty() {
        return (top == NULL);
    }

    // Display the top element of the stack
    int peek() {
        if (top == NULL) {
            cout << "Stack is empty!" << endl;
            return -1;
        }
        return top->data;
    }

    // Display all elements in the stack
    void display() {
        if (top == NULL) {
            cout << "Stack is empty!" << endl;
            return;
        }
        Node* temp = top;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    Stack s;
    s.push(5);
    s.push(10);
    s.push(15);
    s.push(20);
    s.display();
    cout << "Top element is: " << s.peek() << endl;
    s.pop();
    cout << "Top element after pop is: " << s.peek() << endl;
    s.pop();
    s.display();
    return 0;
}
